var searchData=
[
  ['s_5fgatherstatistics_187',['s_GatherStatistics',['../structAws_1_1Crt_1_1Io_1_1ChannelHandler.html#a81aca729ba2ca1fdfa9bdcdbcd5d8b35',1,'Aws::Crt::Io::ChannelHandler']]],
  ['s_5fincrementreadwindow_188',['s_IncrementReadWindow',['../structAws_1_1Crt_1_1Io_1_1ChannelHandler.html#ae4179b36a996d2b845786412e0da1161',1,'Aws::Crt::Io::ChannelHandler']]],
  ['s_5finitialwindowsize_189',['s_InitialWindowSize',['../structAws_1_1Crt_1_1Io_1_1ChannelHandler.html#a632165184f52f4a2d753c180c641ec9a',1,'Aws::Crt::Io::ChannelHandler']]],
  ['s_5fmessageoverhead_190',['s_MessageOverhead',['../structAws_1_1Crt_1_1Io_1_1ChannelHandler.html#a874b63ebb53dada8344ecab7145637eb',1,'Aws::Crt::Io::ChannelHandler']]],
  ['s_5fprocessreadmessage_191',['s_ProcessReadMessage',['../structAws_1_1Crt_1_1Io_1_1ChannelHandler.html#ae8ac199659fb49d0cfaf1b20e68c1922',1,'Aws::Crt::Io::ChannelHandler']]],
  ['s_5fprocessshutdown_192',['s_ProcessShutdown',['../structAws_1_1Crt_1_1Io_1_1ChannelHandler.html#a71220bf18c0249632404738e76d2c531',1,'Aws::Crt::Io::ChannelHandler']]],
  ['s_5fprocesswritemessage_193',['s_ProcessWriteMessage',['../structAws_1_1Crt_1_1Io_1_1ChannelHandler.html#aa58be947f0956717079a1b5f303e1f28',1,'Aws::Crt::Io::ChannelHandler']]],
  ['s_5fresetstatistics_194',['s_ResetStatistics',['../structAws_1_1Crt_1_1Io_1_1ChannelHandler.html#abdfc27c6ae5aa5fe05d1397a50263143',1,'Aws::Crt::Io::ChannelHandler']]],
  ['servicename_195',['ServiceName',['../structAws_1_1Iot_1_1WebsocketConfig.html#a2a3f538f5ae05a41e4ad4f3f287c6d9e',1,'Aws::Iot::WebsocketConfig']]],
  ['set_196',['set',['../CMakeLists_8txt.html#ac030182a6a8a0f8a2e0c33b2e6513872',1,'set(SEARCH_LIBCRYPTO OFF CACHE BOOL &quot;Let S2N use libcrypto from AWS-LC.&quot;) else() set(SEARCH_LIBCRYPTO ON CACHE BOOL &quot;Let S2N search libcrypto in the system.&quot;) endif() set(UNSAFE_TREAT_WARNINGS_AS_ERRORS OFF CACHE BOOL &quot;Disable warnings-as-errors when building S2N&quot;) add_subdirectory(crt/s2n) endif() add_subdirectory(crt/aws-c-io) add_subdirectory(crt/aws-c-cal) add_subdirectory(crt/aws-c-compression) add_subdirectory(crt/aws-c-http) add_subdirectory(crt/aws-c-auth) add_subdirectory(crt/aws-c-mqtt) add_subdirectory(crt/aws-checksums) add_subdirectory(crt/aws-c-event-stream) add_subdirectory(crt/aws-c-s3) set(BUILD_TESTING $:&#160;CMakeLists.txt'],['../CMakeLists_8txt.html#a87f2d603574a84a0e3edf1432322aaa2',1,'set(FIND_LIBRARY_USE_LIB64_PATHS true) endif() if(NOT CMAKE_CXX_STANDARD) set(CMAKE_CXX_STANDARD 11) endif() if(NOT CMAKE_BUILD_TYPE) if(NOT WIN32) set(CMAKE_BUILD_TYPE &quot;RelWithDebInfo&quot;) endif() endif() if(NOT DEFINED AWS_CRT_CPP_VERSION) set(AWS_CRT_CPP_VERSION &quot;v1.0.0-dev&quot;) execute_process(COMMAND git describe --tags RESULT_VARIABLE GIT_EXIT_CODE OUTPUT_VARIABLE GIT_TAG ERROR_QUIET OUTPUT_STRIP_TRAILING_WHITESPACE) if(NOT GIT_EXIT_CODE) set(AWS_CRT_CPP_VERSION $:&#160;CMakeLists.txt'],['../CMakeLists_8txt.html#a0165514105e215eb4675ab9e0cb6168b',1,'set(BUILD_TESTING OFF) add_subdirectory(crt/aws-c-common) if(UNIX AND NOT APPLE AND NOT BYO_CRYPTO) if(NOT USE_OPENSSL) set(DISABLE_PERL ON CACHE BOOL &quot;Disable Perl for AWS-LC.&quot;) set(DISABLE_GO ON CACHE BOOL &quot;Disable Go for AWS-LC.&quot;) set(OLD_CMAKE_C_FLAGS &quot;$:&#160;CMakeLists.txt']]],
  ['setstrategy_197',['SetStrategy',['../classAws_1_1Crt_1_1Http_1_1AdaptiveHttpProxyStrategy.html#a852bd301949015fb93558bfb100fceb6',1,'Aws::Crt::Http::AdaptiveHttpProxyStrategy']]],
  ['signable_198',['Signable',['../structAws_1_1Crt_1_1Auth_1_1HttpSignerCallbackData.html#a52405e8bcfd9942c63d980210de2d815',1,'Aws::Crt::Auth::HttpSignerCallbackData']]],
  ['signer_199',['Signer',['../structAws_1_1Iot_1_1WebsocketConfig.html#a11e130fd6dac6864a4d41a756e4db27a',1,'Aws::Iot::WebsocketConfig']]],
  ['signingregion_200',['SigningRegion',['../structAws_1_1Iot_1_1WebsocketConfig.html#a37fbae74b51ef56bc47513fdea4325f0',1,'Aws::Iot::WebsocketConfig']]],
  ['sigv4signing_2ecpp_201',['Sigv4Signing.cpp',['../Sigv4Signing_8cpp.html',1,'']]],
  ['socketoptions_2ecpp_202',['SocketOptions.cpp',['../SocketOptions_8cpp.html',1,'']]],
  ['static_5fstrlen_203',['static_strlen',['../cJSON_8cpp.html#a5714bac836668a1b9af55465b78531ef',1,'cJSON.cpp']]],
  ['stream_2ecpp_204',['Stream.cpp',['../Stream_8cpp.html',1,'']]],
  ['streamingaws4hmacsha256events_205',['StreamingAws4HmacSha256Events',['../namespaceAws_1_1Crt_1_1Auth_1_1SignedBodyValue.html#a8b192e6cfcca23c3c04fb5eed098b7de',1,'Aws::Crt::Auth::SignedBodyValue']]],
  ['streamingaws4hmacsha256payload_206',['StreamingAws4HmacSha256Payload',['../namespaceAws_1_1Crt_1_1Auth_1_1SignedBodyValue.html#ab453a14f9e0d7e704a00bcc9663a5914',1,'Aws::Crt::Auth::SignedBodyValue']]],
  ['string_207',['string',['../namespaceAws.html#a46c66599c92a951c37cd08e1171e7fc7',1,'Aws::string()'],['../CMakeLists_8txt.html#a7c60a77e7ed55e387d5cfde4d58df1e2',1,'string(REPLACE &quot;;&quot; &quot;${AWS_MODULE_DIR};&quot; AWS_MODULE_PATH &quot;${CMAKE_PREFIX_PATH}${AWS_MODULE_DIR}&quot;) list(APPEND CMAKE_MODULE_PATH $:&#160;CMakeLists.txt']]],
  ['stringutils_2ecpp_208',['StringUtils.cpp',['../StringUtils_8cpp.html',1,'']]],
  ['subackcallbackdata_209',['SubAckCallbackData',['../structAws_1_1Crt_1_1Mqtt_1_1SubAckCallbackData.html',1,'Aws::Crt::Mqtt::SubAckCallbackData'],['../structAws_1_1Crt_1_1Mqtt_1_1SubAckCallbackData.html#a87b37e52f2cc4d332ac1e8dfaddd41a6',1,'Aws::Crt::Mqtt::SubAckCallbackData::SubAckCallbackData()']]]
];
